#include <SPI.h>
#include <Wire.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>
//#include "pitches.h"

#define SCREEN_WIDTH 128 // Ancho del display OLED, en pixels
#define SCREEN_HEIGHT 64 // Alto del display OLED, en pixels

// Declaration for an SSD1306 display connected to I2C (SDA, SCL pins)
// Declaracion del display SSD1306 conectado a I2C (pines SDA, SLC) 
#define OLED_RESET     -1 // Reset pin # (or -1 if sharing Arduino reset pin)
Adafruit_SSD1306 display(SCREEN_WIDTH, SCREEN_HEIGHT, &Wire, OLED_RESET);

#define IwaInd_H 64
#define IwaInd_W 128

int a = 0;
const int buttonPin = 26;
const int ledPinR = 2; 
const int ledPinV = 3;
int buttonState = 0;
bool first = true;

static const unsigned char PROGMEM logo_IwaInd[] =
{ // 'IwaiinIndustries', 128x64px
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xff, 0xfc, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x00, 
0x00, 0x01, 0xfd, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x00, 
0x00, 0x01, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe0, 0x00, 
0x00, 0x01, 0xfc, 0xf8, 0xfe, 0x7e, 0x1f, 0xf0, 0x3f, 0x9f, 0xcf, 0xf0, 0xf8, 0x00, 0xe0, 0x00, 
0x00, 0x01, 0xfc, 0xfc, 0xfe, 0x7c, 0x1f, 0xf0, 0x3f, 0x9f, 0xcf, 0xf8, 0xf8, 0x01, 0xc0, 0x00, 
0x00, 0x01, 0xfc, 0xfd, 0xfe, 0x7c, 0x1f, 0xf8, 0x3f, 0x9f, 0xcf, 0xf8, 0xf8, 0x01, 0xc0, 0x00, 
0x00, 0x01, 0xfc, 0xfd, 0xfe, 0x7c, 0x3e, 0xf8, 0x3f, 0x9f, 0xcf, 0xfc, 0xf8, 0x03, 0x80, 0x00, 
0x00, 0x01, 0xfc, 0xfd, 0xfe, 0xfc, 0x3e, 0xf8, 0x3f, 0x9f, 0xcf, 0xfd, 0xf8, 0x03, 0x00, 0x00, 
0x00, 0x01, 0xfc, 0xfd, 0xfe, 0xfc, 0x3e, 0xfc, 0x3f, 0x9f, 0xcf, 0xfd, 0xf8, 0x07, 0x00, 0x00, 
0x00, 0x01, 0xfc, 0x7f, 0xfe, 0xf8, 0x7c, 0x7c, 0x3f, 0x9f, 0xcf, 0xff, 0xf8, 0x06, 0x00, 0x00, 
0x00, 0x01, 0xfc, 0x7f, 0xff, 0xf8, 0x7c, 0x7c, 0x3f, 0x9f, 0xcf, 0xff, 0xf8, 0x0e, 0x00, 0x00, 
0x00, 0x01, 0xfc, 0x7f, 0xff, 0xf8, 0x7c, 0x7e, 0x3f, 0x9f, 0xcf, 0xff, 0xf8, 0x0c, 0x00, 0x00, 
0x00, 0x01, 0xfc, 0x7f, 0xff, 0xf8, 0xff, 0xfe, 0x3f, 0x9f, 0xcf, 0xdf, 0xf8, 0x18, 0x00, 0x00, 
0x00, 0x01, 0xfc, 0x7f, 0xdf, 0xf0, 0xff, 0xfe, 0x3f, 0x9f, 0xcf, 0xcf, 0xf8, 0x18, 0x00, 0x00, 
0x00, 0x01, 0xfc, 0x3f, 0xdf, 0xf0, 0xff, 0xff, 0x3f, 0x9f, 0xcf, 0xcf, 0xf8, 0x30, 0x00, 0x00, 
0x00, 0x01, 0xfc, 0x3f, 0xcf, 0xf1, 0xff, 0xff, 0x3f, 0x9f, 0xcf, 0xcf, 0xf8, 0x20, 0x00, 0x00, 
0x00, 0x01, 0xfc, 0x3f, 0xcf, 0xf1, 0xf8, 0x7f, 0x3f, 0x9f, 0xcf, 0xc7, 0xf8, 0x60, 0x00, 0x00, 
0x00, 0x01, 0xfc, 0x3f, 0xcf, 0xe1, 0xf8, 0x3f, 0xbf, 0x9f, 0xcf, 0xc7, 0xf8, 0x40, 0x00, 0x00, 
0x00, 0x01, 0xfc, 0x3f, 0x8f, 0xe3, 0xf8, 0x3f, 0xbf, 0x9f, 0xcf, 0xc7, 0xf8, 0xc0, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 
0x00, 0x01, 0xde, 0x1c, 0xf8, 0x3c, 0x70, 0xff, 0xff, 0xe0, 0xef, 0xe3, 0x81, 0x00, 0x00, 0x00, 
0x00, 0x01, 0xde, 0x1d, 0xfe, 0x38, 0x77, 0xff, 0xff, 0xf9, 0xef, 0xef, 0xc1, 0x00, 0x00, 0x00, 
0x00, 0x03, 0xdf, 0x3d, 0xef, 0x38, 0xff, 0x07, 0x87, 0x39, 0xde, 0x1e, 0x42, 0x00, 0x00, 0x00, 
0x00, 0x03, 0xbf, 0xb9, 0xc7, 0x78, 0xee, 0x07, 0x8f, 0x3b, 0xde, 0x1e, 0x02, 0x00, 0x00, 0x00, 
0x00, 0x03, 0xbf, 0xfb, 0xc7, 0x71, 0xef, 0x87, 0x0f, 0xf3, 0xdf, 0x8f, 0x04, 0x00, 0x00, 0x00, 
0x00, 0x07, 0xbb, 0xfb, 0x8f, 0x71, 0xc3, 0xc7, 0x0e, 0xe3, 0xbf, 0x87, 0x80, 0x00, 0x00, 0x00, 
0x00, 0x07, 0x3b, 0xf3, 0x9e, 0x73, 0xc1, 0xcf, 0x1e, 0x77, 0xb8, 0x03, 0x88, 0x00, 0x00, 0x00, 
0x00, 0x07, 0x79, 0xf7, 0xfc, 0x7f, 0x9f, 0xce, 0x1e, 0x77, 0xbf, 0xff, 0x80, 0x00, 0x00, 0x00, 
0x00, 0x0f, 0x70, 0xf7, 0xf0, 0x3e, 0x1f, 0x0e, 0x1c, 0x7f, 0x7f, 0xfe, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};


void setup() {
  Serial.begin(115200);
  
  pinMode(buttonPin, INPUT);
  pinMode(ledPinR, OUTPUT);
  pinMode(ledPinV, OUTPUT);

  // SSD1306_SWITCHCAPVCC = genera el voltaje del display a 3.3V internamente.
  if(!display.begin(SSD1306_SWITCHCAPVCC, 0x3C)) { 
    Serial.println(F("SSD1306 allocation failed"));
    for(;;); // Loop infinito
  }

  // Show initial display buffer contents on the screen --
  // the library initializes this with an Adafruit splash screen.
  display.display();
  display.clearDisplay();
  display.drawBitmap(0, 0, logo_IwaInd, IwaInd_W, IwaInd_H, WHITE);
  display.display();
  delay(2000);

  // Clear the buffer
  display.clearDisplay();

  
  display.setTextSize(2); 
  display.setTextColor(WHITE);
  display.setCursor(4, 16);
  display.println("d20 Roller");
  display.display();

  display.setTextSize(1); 
  display.setTextColor(WHITE);
  display.setCursor(30, 40);
  display.println("designed by");
  display.display();     

  display.setTextSize(1); 
  display.setTextColor(WHITE);
  display.setCursor(46, 48);
  display.println("Iwaiin");
  display.display();     
  
  display.drawFastHLine(4, 32, 120, SSD1306_WHITE);

  display.display();
  delay(2000);

  display.clearDisplay();
  display.display();
}

void loop() {
  bool buttonState = digitalRead(buttonPin);

  if(first == true){
      display.setTextSize(2); 
      display.setTextColor(WHITE);
      display.setCursor(10, 8);
      display.println("Press the");
      display.display();

      display.setTextSize(2); 
      display.setTextColor(WHITE);
      display.setCursor(10, 24);
      display.println("Button to");
      display.display();

      display.setTextSize(2); 
      display.setTextColor(WHITE);
      display.setCursor(40, 40);
      display.println("Roll");
      display.display();
      delay(500);
  }
  else{
    if(a < 10){
      display.setTextSize(8); 
      display.setTextColor(WHITE);
      display.setCursor(40, 0);
      display.println(a);
      display.display();
      delay(5);
    }

    if(a >= 10){
      display.setTextSize(8); 
      display.setTextColor(WHITE);
      display.setCursor(16, 0);
      display.println(a);
      display.display();
      delay(5);
    }
  }

  if(buttonState == LOW ){
    delay(1);
  }
  else{
    digitalWrite(ledPinR, LOW);
    digitalWrite(ledPinV, LOW);
    first = false;
    display.clearDisplay();
    display.display();

    for(int i = 0; i < 10 ; i++){
      a = 1 + rand() % (21-1);

      if((i % 2) == 0){digitalWrite(ledPinR, HIGH);}
      if((i % 2) !=0){digitalWrite(ledPinV, HIGH);}

      if(a < 10){
        display.setTextSize(8); 
        display.setTextColor(WHITE);
        display.setCursor(40, 0);
        display.println(a);
        display.display();
        delay(10);
      }

      if(a >= 10){
        display.setTextSize(8); 
        display.setTextColor(WHITE);
        display.setCursor(16, 0);
        display.println(a);
        display.display();
        delay(10);
      }

      display.clearDisplay();
      display.display();

      digitalWrite(ledPinR, LOW);
      digitalWrite(ledPinV, LOW);
    }

    if(a < 10){
        display.setTextSize(8); 
        display.setTextColor(WHITE);
        display.setCursor(40, 0);
        display.println(a);
        display.display();
        delay(5);
    }

    if(a >= 10){
      display.setTextSize(8); 
      display.setTextColor(WHITE);
      display.setCursor(16, 0);
      display.println(a);
      display.display();
      delay(5);
    }

    if(a == 1){
      digitalWrite(ledPinR, HIGH);
      //noTone(8);
      // play a note on pin 6 for 200 ms:
      //tone(8, NOTE_A4, 400);
      delay(200);
      //tone(8, NOTE_A1, 400);
      delay(200);
    }
    else if(a == 20){
      digitalWrite(ledPinV, HIGH);
      noTone(8);
      // play a note on pin 6 for 200 ms:
      //tone(8, NOTE_C4, 400);
      delay(400);
      //noTone(8);
      //tone(8, NOTE_C4, 400);
      delay(200);
      //tone(8, NOTE_G4, 800);
    }
    else{
      //noTone(8);

      //tone(8, NOTE_C4, 400);
      delay(200);
    }
  }
}